# Load the shiny package#
library(shiny)#
library(ggplot2)#
library(readxl)#
library(dplyr)#
#
# Define the URL for the Excel file#
url <- "https://github.com/SeanJibowu555/2358839DataVisualisation-repository/blob/ae5ce13362e7f5fa9317d7e18fe285ee2173f3a3/Sleep_Efficiency_Updated.xls"#
#
# Download and read the Excel file#
temp_file <- tempfile(fileext = ".xls")#
download.file(url, temp_file, mode = "wb")#
data <- read_excel(temp_file, sheet = "Sleep_Efficiency_Updated")#
#
if (!exists("data") || !is.data.frame(data)) {#
  stop("Data failed to load. Please check the file and URL.")#
}#
# Define the UI#
ui <- fluidPage(#
  titlePanel("Sleep Data Analysis"),#
  sidebarLayout(#
    sidebarPanel(),#
    mainPanel(#
      tabsetPanel(#
        tabPanel("Question 1", plotOutput("plot1")),#
        tabPanel("Question 2", plotOutput("plot2")),#
        tabPanel("Question 3", plotOutput("plot3")),#
        tabPanel("Question 4", plotOutput("plot4"))#
      )#
    )#
  )#
)#
#
# Define the server logic#
server <- function(input, output) {#
  # Render the plot for Question 1#
  output$plot1 <- renderPlot({#
    ggplot(data, aes(x = SmokingStatus, y = SleepDuration)) +#
      geom_boxplot() +#
      labs(title = "Sleep Duration by Smoking Status", x = "Smoking Status", y = "Sleep Duration")#
  })#
  # Render the plot for Question 2#
  output$plot2 <- renderPlot({#
    par(mfrow = c(1, 2))  # Arrange two plots side by side#
    # Plot 1: Age vs Sleep Duration#
    plot(data$Age, data$SleepDuration, #
         main = "Age vs Sleep Duration", #
         xlab = "Age", ylab = "Sleep Duration", #
         col = "blue", pch = 19)#
    model1 <- lm(SleepDuration ~ Age, data = data)#
    abline(model1, col = "red", lwd = 2)#
    # Plot 2: Age vs SleepEfficiency#
    plot(data$Age, data$SleepEfficiency, #
         main = "Age vs Sleep Efficiency", #
         xlab = "Age", ylab = "Sleep Efficiency", #
         col = "blue", pch = 19)#
    model2 <- lm(SleepEfficiency ~ Age, data = data)#
    abline(model2, col = "red", lwd = 2)#
  })#
  # Render the plot for Question 3#
  output$plot3 <- renderPlot({#
    ggplot(data, aes(x = Gender, y = SleepEfficiency, fill = Gender)) +#
      geom_bar(stat = "identity") +#
      labs(title = "Average Sleep Efficiency by Gender", x = "Gender", y = "Average Sleep Efficiency") +#
      theme_minimal()#
  })#
  # Render the plot for Question 4#
  output$plot4 <- renderPlot({#
    par(mfrow = c(1, 2))  # Arrange two plots side by side#
    # Plot 1: Alcohol Consumption & Exercise Frequency vs Sleep Efficiency#
    plot(data$AverageAlcoholConsumption, data$SleepEfficiency, #
         main = "Alcohol Consumption vs Sleep Efficiency", #
         xlab = "Average Alcohol Consumption", ylab = "Sleep Efficiency", #
         col = "green", pch = 19)#
    model3 <- lm(SleepEfficiency ~ AverageAlcoholConsumption, data = data)#
    abline(model3, col = "red", lwd = 2)#
    plot(data$ExerciseFrequency, data$SleepEfficiency, #
         main = "Exercise Frequency vs Sleep Efficiency", #
         xlab = "Average Exercise Frequency", ylab = "Sleep Efficiency", #
         col = "purple#
    model4 <- lm(SleepEfficiency ~ ExerciseFrequency, data = data)#
    abline(model4, col = "red", lwd = 2)#
    # Plot 2: Sleep Duration & Caffeine Consumption vs Sleep Efficiency#
    plot(data$SleepDuration, data$SleepEfficiency, #
         main = "Sleep Duration vs Sleep Efficiency", #
         xlab = "Sleep Duration", ylab = "Sleep Efficiency", #
         col = "orange", pch = 19)#
    model5 <- lm(SleepEfficiency ~ SleepDuration, data = data)#
    abline(model5, col = "red", lwd = 2)#
    plot(data$CaffeineConsumption, data$SleepEfficiency, #
         main = "Caffeine Consumption vs Sleep Efficiency", #
         xlab = "Average Caffeine Consumption", ylab = "Sleep Efficiency", #
         col = "brown", pch = 19)#
    model6 <- lm(SleepEfficiency ~ CaffeineConsumption, data = data)#
    abline(model6, col = "red", lwd = 2)#
  })#
}#
#
# Create Shiny app#
shinyApp(ui = ui, server = server)
# Load the shiny package#
library(shiny)#
library(ggplot2)#
library(readxl)#
library(dplyr)#
#
# Define the URL for the Excel file#
url <- "https://github.com/SeanJibowu555/2358839DataVisualisation-repository/blob/6485783f2278e66ee066041de5d6cf02f26ccd0e/Sleep_Efficiency_Updated.xls"#
#
# Download and read the Excel file#
temp_file <- tempfile(fileext = ".xls")#
download.file(url, temp_file, mode = "wb")#
data <- read_excel(temp_file, sheet = "Sleep_Efficiency_Updated")#
#
if (!exists("data") || !is.data.frame(data)) {#
  stop("Data failed to load. Please check the file and URL.")#
}#
# Define the UI#
ui <- fluidPage(#
  titlePanel("Sleep Data Analysis"),#
  sidebarLayout(#
    sidebarPanel(),#
    mainPanel(#
      tabsetPanel(#
        tabPanel("Question 1", plotOutput("plot1")),#
        tabPanel("Question 2", plotOutput("plot2")),#
        tabPanel("Question 3", plotOutput("plot3")),#
        tabPanel("Question 4", plotOutput("plot4"))#
      )#
    )#
  )#
)#
#
# Define the server logic#
server <- function(input, output) {#
  # Render the plot for Question 1#
  output$plot1 <- renderPlot({#
    ggplot(data, aes(x = SmokingStatus, y = SleepDuration)) +#
      geom_boxplot() +#
      labs(title = "Sleep Duration by Smoking Status", x = "Smoking Status", y = "Sleep Duration")#
  })#
  # Render the plot for Question 2#
  output$plot2 <- renderPlot({#
    par(mfrow = c(1, 2))  # Arrange two plots side by side#
    # Plot 1: Age vs Sleep Duration#
    plot(data$Age, data$SleepDuration, #
         main = "Age vs Sleep Duration", #
         xlab = "Age", ylab = "Sleep Duration", #
         col = "blue", pch = 19)#
    model1 <- lm(SleepDuration ~ Age, data = data)#
    abline(model1, col = "red", lwd = 2)#
    # Plot 2: Age vs SleepEfficiency#
    plot(data$Age, data$SleepEfficiency, #
         main = "Age vs Sleep Efficiency", #
         xlab = "Age", ylab = "Sleep Efficiency", #
         col = "blue", pch = 19)#
    model2 <- lm(SleepEfficiency ~ Age, data = data)#
    abline(model2, col = "red", lwd = 2)#
  })#
  # Render the plot for Question 3#
  output$plot3 <- renderPlot({#
    ggplot(data, aes(x = Gender, y = SleepEfficiency, fill = Gender)) +#
      geom_bar(stat = "identity") +#
      labs(title = "Average Sleep Efficiency by Gender", x = "Gender", y = "Average Sleep Efficiency") +#
      theme_minimal()#
  })#
  # Render the plot for Question 4#
  output$plot4 <- renderPlot({#
    par(mfrow = c(1, 2))  # Arrange two plots side by side#
    # Plot 1: Alcohol Consumption & Exercise Frequency vs Sleep Efficiency#
    plot(data$AverageAlcoholConsumption, data$SleepEfficiency, #
         main = "Alcohol Consumption vs Sleep Efficiency", #
         xlab = "Average Alcohol Consumption", ylab = "Sleep Efficiency", #
         col = "green", pch = 19)#
    model3 <- lm(SleepEfficiency ~ AverageAlcoholConsumption, data = data)#
    abline(model3, col = "red", lwd = 2)#
    plot(data$ExerciseFrequency, data$SleepEfficiency, #
         main = "Exercise Frequency vs Sleep Efficiency", #
         xlab = "Average Exercise Frequency", ylab = "Sleep Efficiency", #
         col = "purple#
    model4 <- lm(SleepEfficiency ~ ExerciseFrequency, data = data)#
    abline(model4, col = "red", lwd = 2)#
    # Plot 2: Sleep Duration & Caffeine Consumption vs Sleep Efficiency#
    plot(data$SleepDuration, data$SleepEfficiency, #
         main = "Sleep Duration vs Sleep Efficiency", #
         xlab = "Sleep Duration", ylab = "Sleep Efficiency", #
         col = "orange", pch = 19)#
    model5 <- lm(SleepEfficiency ~ SleepDuration, data = data)#
    abline(model5, col = "red", lwd = 2)#
    plot(data$CaffeineConsumption, data$SleepEfficiency, #
         main = "Caffeine Consumption vs Sleep Efficiency", #
         xlab = "Average Caffeine Consumption", ylab = "Sleep Efficiency", #
         col = "brown", pch = 19)#
    model6 <- lm(SleepEfficiency ~ CaffeineConsumption, data = data)#
    abline(model6, col = "red", lwd = 2)#
  })#
}#
#
# Create Shiny app#
shinyApp(ui = ui, server = server)
# Load the shiny package#
library(shiny)#
library(ggplot2)#
library(readxl)#
library(dplyr)#
#
# Define the URL for the Excel file#
url <- "https://github.com/SeanJibowu555/2358839DataVisualisation-repository/blob/c5754733ede1d5206acf65e2389f01a8e64393f8/Sleep_Efficiency_Updated.xls"#
#
# Download and read the Excel file#
temp_file <- tempfile(fileext = ".xls")#
download.file(url, temp_file, mode = "wb")#
data <- read_excel(temp_file, sheet = "Sleep_Efficiency_Updated")#
#
if (!exists("data") || !is.data.frame(data)) {#
  stop("Data failed to load. Please check the file and URL.")#
}#
# Define the UI#
ui <- fluidPage(#
  titlePanel("Sleep Data Analysis"),#
  sidebarLayout(#
    sidebarPanel(),#
    mainPanel(#
      tabsetPanel(#
        tabPanel("Question 1", plotOutput("plot1")),#
        tabPanel("Question 2", plotOutput("plot2")),#
        tabPanel("Question 3", plotOutput("plot3")),#
        tabPanel("Question 4", plotOutput("plot4"))#
      )#
    )#
  )#
)#
#
# Define the server logic#
server <- function(input, output) {#
  # Render the plot for Question 1#
  output$plot1 <- renderPlot({#
    ggplot(data, aes(x = SmokingStatus, y = SleepDuration)) +#
      geom_boxplot() +#
      labs(title = "Sleep Duration by Smoking Status", x = "Smoking Status", y = "Sleep Duration")#
  })#
  # Render the plot for Question 2#
  output$plot2 <- renderPlot({#
    par(mfrow = c(1, 2))  # Arrange two plots side by side#
    # Plot 1: Age vs Sleep Duration#
    plot(data$Age, data$SleepDuration, #
         main = "Age vs Sleep Duration", #
         xlab = "Age", ylab = "Sleep Duration", #
         col = "blue", pch = 19)#
    model1 <- lm(SleepDuration ~ Age, data = data)#
    abline(model1, col = "red", lwd = 2)#
    # Plot 2: Age vs SleepEfficiency#
    plot(data$Age, data$SleepEfficiency, #
         main = "Age vs Sleep Efficiency", #
         xlab = "Age", ylab = "Sleep Efficiency", #
         col = "blue", pch = 19)#
    model2 <- lm(SleepEfficiency ~ Age, data = data)#
    abline(model2, col = "red", lwd = 2)#
  })#
  # Render the plot for Question 3#
  output$plot3 <- renderPlot({#
    ggplot(data, aes(x = Gender, y = SleepEfficiency, fill = Gender)) +#
      geom_bar(stat = "identity") +#
      labs(title = "Average Sleep Efficiency by Gender", x = "Gender", y = "Average Sleep Efficiency") +#
      theme_minimal()#
  })#
  # Render the plot for Question 4#
  output$plot4 <- renderPlot({#
    par(mfrow = c(1, 2))  # Arrange two plots side by side#
    # Plot 1: Alcohol Consumption & Exercise Frequency vs Sleep Efficiency#
    plot(data$AverageAlcoholConsumption, data$SleepEfficiency, #
         main = "Alcohol Consumption vs Sleep Efficiency", #
         xlab = "Average Alcohol Consumption", ylab = "Sleep Efficiency", #
         col = "green", pch = 19)#
    model3 <- lm(SleepEfficiency ~ AverageAlcoholConsumption, data = data)#
    abline(model3, col = "red", lwd = 2)#
    plot(data$ExerciseFrequency, data$SleepEfficiency, #
         main = "Exercise Frequency vs Sleep Efficiency", #
         xlab = "Average Exercise Frequency", ylab = "Sleep Efficiency", #
         col = "purple#
    model4 <- lm(SleepEfficiency ~ ExerciseFrequency, data = data)#
    abline(model4, col = "red", lwd = 2)#
    # Plot 2: Sleep Duration & Caffeine Consumption vs Sleep Efficiency#
    plot(data$SleepDuration, data$SleepEfficiency, #
         main = "Sleep Duration vs Sleep Efficiency", #
         xlab = "Sleep Duration", ylab = "Sleep Efficiency", #
         col = "orange", pch = 19)#
    model5 <- lm(SleepEfficiency ~ SleepDuration, data = data)#
    abline(model5, col = "red", lwd = 2)#
    plot(data$CaffeineConsumption, data$SleepEfficiency, #
         main = "Caffeine Consumption vs Sleep Efficiency", #
         xlab = "Average Caffeine Consumption", ylab = "Sleep Efficiency", #
         col = "brown", pch = 19)#
    model6 <- lm(SleepEfficiency ~ CaffeineConsumption, data = data)#
    abline(model6, col = "red", lwd = 2)#
  })#
}#
#
# Create Shiny app#
shinyApp(ui = ui, server = server)
# Load the shiny package#
library(shiny)#
library(ggplot2)#
library(readxl)#
library(dplyr)#
#
# Define the URL for the Excel file#
url <- "https://github.com/SeanJibowu555/2358839DataVisualisation-repository/blob/c5754733ede1d5206acf65e2389f01a8e64393f8/Sleep_Efficiency_Updated.xls"#
#
# Download and read the Excel file#
temp_file <- tempfile(fileext = ".xls")#
download.file(url, temp_file, mode = "wb")#
data <- read_excel(temp_file, sheet = "Sleep_Efficiency_Updated")#
#
# Inspect the temporary file manually#
browseURL(temp_file)#
#
# Attempt to read the Excel file#
data <- tryCatch(#
  read_excel(temp_file, sheet = "Sleep_Efficiency_Updated"),#
  error = function(e) {#
    message("Error reading file: ", e$message)#
    return(NULL)#
  }#
)#
#
# Check if data is loaded successfully#
if (is.null(data) || !is.data.frame(data)) {#
  stop("Data failed to load. Please check the file and URL.")#
}
# Define the URL for the raw file and download the file#
url <- "https://raw.githubusercontent.com/SeanJibowu555/2358839DataVisualisation-repository/ae5ce13362e7f5fa9317d7e18fe285ee2173f3a3/Sleep_Efficiency_Updated.xls"#
temp_file <- tempfile(fileext = ".xls")#
download.file(url, temp_file, mode = "wb")#
#
# Attempt to read the Excel file#
data <- tryCatch(#
  read_excel(temp_file, sheet = "Sleep_Efficiency_Updated"),#
  error = function(e) {#
    message("Error reading file: ", e$message)#
    return(NULL)#
  }#
)#
#
# Check if data is loaded successfully#
if (is.null(data) || !is.data.frame(data)) {#
  stop("Data failed to load. Please check the file and URL.")#
}
#install.packages("rsconnect", repos = "https://cran.r-project.org")#
#
library(rsconnect)#
rsconnect::setAccountInfo(name='seanjibowu', token='865698C544BFEA82653A7A18EB9C6317', secret='WKWY0YCktuPF4vbJS9v7Qv/UA2QEA4iT1m/Sj7zs')#
#
rsconnect::deployApp('Users/seanjibowu/2358839DataVisualisationrepository')
